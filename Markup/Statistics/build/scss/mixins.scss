@mixin font-face($name, $path) {
	@font-face {
        font-family: quote($name);
        src: url(quote($path + ".eot")); /* IE9 Compat Modes */
        src: url(quote($path + ".eot?#iefix")) format('embedded-opentype'), /* IE6-IE8 */
             url(quote($path + ".woff")) format('woff'), /* Modern Browsers */
             url(quote($path + ".ttf")) format('truetype');
        font-style: normal;
        font-weight: normal;
    }
}

@mixin fontSizeLineHeight($font-size, $line-height){
    font-size:$font-size;
    line-height:$line-height;
}

@mixin position($position: relative, $top: auto, $right: auto, $bottom: auto, $left: auto, $z-index: 0){
    position:$position;
    top:$top;
    right:$right;
    bottom:$bottom;
    left:$left;
    z-index:$z-index;
}

@mixin border-radius($radius: 0) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin transform($property: none) {
    transform:$property;
    -moz-transform:$property;
    -webkit-transform:$property;
    -o-transform:$property;
    -ms-transform:$property;
}

@mixin transformOrigin($property: none) {
    transform-origin:$property;
    -moz-transform-origin:$property;
    -webkit-transform-origin:$property;
    -o-transform-origin:$property;
    -ms-transform-origin:$property;
}

@mixin transition($property: none) {
    transition:$property;
    -moz-transition:$property;
    -webkit-transition:$property;
    -o-transition:$property;
}

@mixin transitionDelay($property: initial){
     -webkit-transition-delay: $property;
    -moz-transition-delay: $property;
    -o-transition-delay: $property;
    transition-delay: $property;
}

@mixin transitionTime($property: 0.2s) {
    -webkit-transition-duration: $property;
    -moz-transition-duration: $property;
    -o-transition-duration: $property;
    transition-duration: $property;
}

@mixin textEllipsis() {
    overflow:hidden;
    text-overflow:ellipsis;
    white-space:nowrap;
}

@mixin boxShadow($property: none) {
    -webkit-box-shadow: $property;
    -moz-box-shadow: $property;
    box-shadow: $property;
}

@mixin flexbox() {
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin alignItems($property: center) {
    -moz-align-items: $property;
    -ms-align-items: $property;
    -webkit-align-items: $property;
    align-items: $property;
}

@mixin justifyContent($property: center) {
    -moz-justify-content: $property;
    -ms-justify-content: $property;
    -webkit-justify-content: $property;
   justify-content: $property;
}

@mixin opacity($value: 0, $valueIE: 0) {
    -ms-filter: '"progid:DXImageTransform.Microsoft.Alpha(Opacity='+$valueIE+')"';
    filter: alpha(opacity=$valueIE);
    -moz-opacity: $value;
    -khtml-opacity: $value;
    opacity: $value;
}

@mixin user-select($property: none) {
    -webkit-touch-callout: $property;
    -webkit-user-select: $property;
    -khtml-user-select: $property;
    -moz-user-select: $property;
    -ms-user-select: $property;
    user-select: $property;
}

@mixin wordBreak() {
    -ms-word-break: break-all;
    word-break: break-all;
    word-break: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
}

@mixin transformOrigin($property: none){
    -webkit-transform-origin: $property;
    -moz-transform-origin: $property;
    -o-transform-origin: $property;
    transform-origin: $property;
}

@mixin animation-fill-mode($property: none){
    -webkit-animation-fill-mode: $property;
    -moz-animation-fill-mode: $property;
    -o-animation-fill-mode: $property;
    animation-fill-mode: $property;
}

@mixin gradientLinearHorizontal($colorFrom: none, $colorTo: none, $opacityFrom: none, $opacityTo: none){
    background: rgba($colorFrom,$opacityFrom);
    background: -moz-linear-gradient(top, rgba($colorFrom,$opacityFrom) 0%, rgba($colorTo,$opacityTo) 100%);
    background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba($colorFrom,$opacityFrom)), color-stop(100%, rgba($colorTo,$opacityTo)));
    background: -webkit-linear-gradient(top, rgba($colorFrom,$opacityFrom) 0%, rgba($colorTo,$opacityTo) 100%);
    background: -o-linear-gradient(top, rgba($colorFrom,$opacityFrom) 0%, rgba($colorTo,$opacityTo) 100%);
    background: -ms-linear-gradient(top, rgba($colorFrom,$opacityFrom) 0%, rgba($colorTo,$opacityTo) 100%);
    background: linear-gradient(to bottom, rgba($colorFrom,$opacityFrom) 0%, rgba($colorTo,$opacityTo) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$colorFrom}', endColorstr='#{$colorTo}', GradientType=0 );
}

@mixin gradientLinearVertical($colorFrom: none, $colorTo: none, $opacityFrom: none, $opacityTo: none, $percentFrom: none, $percentTo: none) {
    background: rgba($colorFrom,$opacityFrom); /* Old browsers */
    background: -moz-linear-gradient(left, rgba($colorFrom,$opacityFrom) $percentFrom, rgba($colorTo,$opacityTo) $percentTo); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right top, color-stop($percentFrom,rgba($colorFrom,$opacityFrom)), color-stop($percentTo,rgba($colorTo,$opacityTo))); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(left, rgba($colorFrom,$opacityFrom) $percentFrom,rgba($colorTo,$opacityTo) $percentTo); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(left, rgba($colorFrom,$opacityFrom) $percentFrom,rgba($colorTo,$opacityTo) $percentTo); /* Opera 11.10+ */
    background: -ms-linear-gradient(left, rgba($colorFrom,$opacityFrom) $percentFrom,rgba($colorTo,$opacityTo) $percentTo); /* IE10+ */
    background: linear-gradient(to right, rgba($colorFrom,$opacityFrom) $percentFrom,rgba($colorTo,$opacityTo) $percentTo); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$colorFrom}', endColorstr='#{$colorTo}',GradientType=1 ); /* IE6-9 */
}

@mixin boxSizing($property: border-box) {
    -webkit-box-sizing: $property;
    -moz-box-sizing: $property;
    box-sizing: $property;
}

@mixin perspective($property: none){
    -webkit-perspective: $property;
    -moz-perspective: $property;
    -o-perspective: $property;
    perspective: $property;
}

@mixin backface-visibility($property: hidden){
    -webkit-backface-visibility: $property;
    -moz-backface-visibility: $property;
    -o-backface-visibility: $property;
    backface-visibility: $property;
}

@mixin transform-style($property: none){
    -webkit-transform-style: $property;
    -moz-transform-style: $property;
    -o-transform-style: $property;
    transform-style: $property;
}

@mixin blendingOverlay($overlayMode: overlay, $imageUrl: none, $directionCrossbrowser: left, $direction: to right, $startColor: transparent, $endColor: transparent) {
    background-repeat: no-repeat;
    background-position: top left;
    background-image: $imageUrl, -webkit-linear-gradient($directionCrossbrowser, $startColor, $endColor);
    background-image: $imageUrl, -moz-linear-gradient($directionCrossbrowser, $startColor, $endColor);
    background-image: $imageUrl, -o-linear-gradient($directionCrossbrowser, $startColor, $endColor);
    background-image: $imageUrl, linear-gradient($direction, $startColor, $endColor);
    background-blend-mode: $overlayMode;
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }

    -webkit-animation: $animations;
    -moz-animation: $animations;
    -o-animation: $animations;
    animation: $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }

    @-moz-keyframes #{$animationName} {
        @content;
    }

    @-o-keyframes #{$animationName} {
        @content;
    }

    @keyframes #{$animationName} {
        @content;
    }
}

@mixin dottedBorder($color: #8f8f8f, $orientation: horizontal, $position: top, $spacing: 5px, $size: 1px) {
    background-position: $position;

    @if $orientation == horizontal {
        background-image: linear-gradient(to right, $color $size/$spacing * 100%, rgba(255,255,255,0) 0%);
        background-size: $spacing $size;
        background-repeat: repeat-x;
    }
    @else {
        background-image: linear-gradient($color $size/$spacing * 100%, rgba(255,255,255,0) 0%);
        background-size: $size $spacing;
        background-repeat: repeat-y;
    }

    .ie9 & {
        border-#{$position}: 1px dotted $color;
    }
}
